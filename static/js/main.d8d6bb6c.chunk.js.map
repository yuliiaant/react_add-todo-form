{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","getUserById","userId","usersFromServer","find","initialTodos","symbolsExsception","App","useState","setTitle","selectedUserId","setSelectedUserId","Math","max","count","setCount","todosList","setTodosList","titleError","setTitleError","selectError","setSelectError","action","method","onSubmit","event","newTodo","preventDefault","currentTodos","type","placeholder","value","onChange","target","replace","defaultValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8d6bb6c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n      data-id={id}\n      key={id}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types';\n\nfunction getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nconst symbolsExsception = /[^a-zA-Zа-яА-Я0-9\\s]/g;\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [count, setCount] = useState(getNewTodoId(initialTodos));\n  const [todosList, setTodosList] = useState<Todo[]>(initialTodos);\n  const [titleError, setTitleError] = useState(false);\n  const [selectError, setSelectError] = useState(false);\n\n  const onAddTodo = (newTodo: Todo) => {\n    setTodosList(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  const resetForm = () => {\n    setCount(count + 1);\n    setTitle('');\n    setSelectedUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setSelectError(!selectedUserId);\n\n    if (!title || !selectedUserId) {\n      return;\n    }\n\n    onAddTodo({\n      user: getUserById(selectedUserId),\n      id: count,\n      title,\n      completed: false,\n      userId: selectedUserId,\n    });\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        key={count}\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value.replace(symbolsExsception, ''));\n                setTitleError(false);\n              }}\n            />\n          </label>\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              defaultValue={0}\n              value={selectedUserId}\n              onChange={(event) => {\n                setSelectedUserId(+event.target.value);\n                setSelectError(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {selectError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}